// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiVRoom.DAL.EF;

#nullable disable

namespace WebApiVRoom.DAL.Migrations
{
    [DbContext(typeof(VRoomContext))]
    partial class VRoomContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("YourNamespace.ChannelSettings", b =>
                {
                    b.Property<int>("TempId")
                        .HasColumnType("int");

                    b.ToTable("ChannelSettings");
                });

            modelBuilder.Entity("YourNamespace.PinnedVideo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChannelSettingsId")
                        .HasColumnType("int");

                    b.Property<int>("VideoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChannelSettingsId");

                    b.HasIndex("VideoId");

                    b.ToTable("PinnedVideos", (string)null);
                });

            modelBuilder.Entity("YourNamespace.Video", b =>
                {
                    b.Property<int>("TempId")
                        .HasColumnType("int");

                    b.ToTable("Video");
                });

            modelBuilder.Entity("YourNamespace.PinnedVideo", b =>
                {
                    b.HasOne("YourNamespace.ChannelSettings", "ChannelSettings")
                        .WithMany()
                        .HasForeignKey("ChannelSettingsId")
                        .HasPrincipalKey("TempId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("YourNamespace.Video", "Video")
                        .WithMany()
                        .HasForeignKey("VideoId")
                        .HasPrincipalKey("TempId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChannelSettings");

                    b.Navigation("Video");
                });
#pragma warning restore 612, 618
        }
    }
}
